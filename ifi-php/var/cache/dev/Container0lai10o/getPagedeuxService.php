<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'App\Controller\Pagedeux' shared autowired service.

require_once $this->targetDirs[3].'/vendor/symfony/framework-bundle/Controller/ControllerTrait.php';
require_once $this->targetDirs[3].'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
require_once $this->targetDirs[3].'/src/Controller/Pagedeux.php';

$this->services['App\Controller\Pagedeux'] = $instance = new \App\Controller\Pagedeux();

$instance->setContainer(new \Symfony\Component\DependencyInjection\ServiceLocator(array('doctrine' => function () {
    return ${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->getDoctrineService()) && false ?: '_'};
}, 'http_kernel' => function () {
    return ${($_ = isset($this->services['http_kernel']) ? $this->services['http_kernel'] : $this->getHttpKernelService()) && false ?: '_'};
}, 'request_stack' => function () {
    return ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack()) && false ?: '_'};
}, 'router' => function () {
    return ${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'};
}, 'twig' => function () {
    return ${($_ = isset($this->services['twig']) ? $this->services['twig'] : $this->getTwigService()) && false ?: '_'};
})));

return $instance;
